{{- /*
Ingress for frontend.
- We capture the root context into $root to safely reference top-level .Values inside nested ranges/with blocks.
- Always close conditionals/with/range with matching {{- end }} to avoid unexpected EOF.
*/ -}}
{{- if .Values.ingress.enabled }}
{{- $root := . -}}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "frontend.fullname" $root }}
  annotations:
    {{- if $root.Values.ingress.annotations }}
{{ toYaml $root.Values.ingress.annotations | nindent 4 }}
    {{- end }}
spec:
  {{- with $root.Values.ingress.className }}
  ingressClassName: {{ . | quote }}
  {{- end }}
  rules:
    {{- range $host := $root.Values.ingress.hosts }}
    - host: {{ $host.host | quote }}
      http:
        paths:
          {{- range $p := $host.paths }}
          - path: {{ $p.path | quote }}
            pathType: {{ $p.pathType | default "Prefix" | quote }}
            backend:
              service:
                name: {{ include "frontend.fullname" $root }}
                port:
                  number: {{ $root.Values.service.port }}
          {{- end }}
          # ---- Minimal addition: route /api directly to backend Service ----
          - path: /api
            pathType: "Prefix"
            backend:
              service:
                name: backend
                port:
                  number: 3000
          # -----------------------------------------------------------------
    {{- end }}
  {{- with $root.Values.ingress.tls }}
  tls:
{{ toYaml . | nindent 4 }}
  {{- end }}
{{- end }}
