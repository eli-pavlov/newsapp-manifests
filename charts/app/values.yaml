app:
  name: app
  type: backend # or "frontend"
  syncWave: "1"

image:
  repository: ""
  tag: "latest"
  pullPolicy: IfNotPresent

replicaCount: 1

service:
  type: ClusterIP
  port: 8080
  nodePort: null
  hostPort: null

podSecurityContext:
  runAsNonRoot: true
  runAsUser: 101
  runAsGroup: 101
  fsGroup: 101

containerSecurityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL

# Default resources so HPA (if enabled) has CPU requests to target.
resources:
  requests:
    cpu: 100m
    memory: 128Mi
  limits:
    memory: 256Mi

nodeSelector: {}
tolerations: []
affinity: {}

imagePullSecrets: []

env:
  plain: {}
  secretRef: ""
  configRef: ""

hpa:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
  # NEW: easiest TLS wiringâ€”set this to "letsencrypt-staging" or "letsencrypt-prod"
  certManagerClusterIssuer: ""
  hosts: []
  tls: []

probes:
  readiness:
    type: tcp        # "tcp" or "http"
    # path: /healthz # only used when type=http
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 2
    successThreshold: 1
    failureThreshold: 3

  liveness:
    type: tcp
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 2
    successThreshold: 1
    failureThreshold: 6

  startup:
    enabled: true
    type: tcp
    periodSeconds: 5
    failureThreshold: 30
