apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.fullnameOverride | default (include "mysql.fullname" .) }}
  labels:
    app.kubernetes.io/name: {{ .Chart.Name }}
  annotations:
    argocd.argoproj.io/sync-wave: "0"
spec:
  serviceName: {{ .Values.fullnameOverride | default (include "mysql.fullname" .) }}
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Chart.Name }}
    spec:
      {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      {{- end }}
      containers:
        - name: mysql
          image: mysql:8.3
          envFrom:
            - secretRef:
                name: {{ .Values.mysql.secretName }}
          ports:
            - containerPort: 3306
          volumeMounts:
            - name: data
              mountPath: /var/lib/mysql
      initContainers:
        - name: wait-for-storage
          image: busybox
          command:
            - sh
            - -c
            - >
              while [ ! -d /mnt/{{ .Release.Name }} ]; do
                echo "Waiting for storage...";
                sleep 2;
              done
          volumeMounts:
            - name: mysql-data
              mountPath: /mnt

    volumeClaimTemplates:
    - metadata:
        name: mysql-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: {{ .Values.persistence.size }}
        storageClassName: ""
