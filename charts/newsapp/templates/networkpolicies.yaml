{{- /*
Minimal lock-down:
... (comment unchanged)
*/ -}}
{{- $np := .Values.networkPolicy | default dict -}}
{{- $beeg := $np.backendEgressWeb | default dict -}}
{{- if $np.enabled }}

apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-deny-all
  annotations:
    argocd.argoproj.io/sync-wave: "1"
spec:
  podSelector: {}
  policyTypes: ["Ingress","Egress"]

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-dns-egress
spec:
  podSelector: {}
  policyTypes: ["Egress"]
  egress:
    - to:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: kube-system
          podSelector:
            matchLabels:
              k8s-app: kube-dns
      ports:
        - protocol: UDP
          port: 53
        - protocol: TCP
          port: 53
    - to:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: kube-system
          podSelector:
            matchLabels:
              k8s-app: coredns
      ports:
        - protocol: UDP
          port: 53
        - protocol: TCP
          port: 53

---
# Ingress from ingress-nginx -> frontend on 8080
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: fe-allow-from-ingress
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/component: frontend
  policyTypes: ["Ingress"]
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: ingress-nginx
      ports:
        - protocol: TCP
          port: 8080

---
# FE -> BE egress on 8080
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: fe-egress-be
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/component: frontend
  policyTypes: ["Egress"]
  egress:
    - to:
        - podSelector:
            matchLabels:
              app.kubernetes.io/component: backend
      ports:
        - protocol: TCP
          port: 8080

---
# BE <- FE ingress on 8080
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: be-ingress-from-fe
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/component: backend
  policyTypes: ["Ingress"]
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app.kubernetes.io/component: frontend
      ports:
        - protocol: TCP
          port: 8080

{{- if .Values.db.enabled }}
---
# BE -> DB egress on 5432
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: be-egress-db
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/component: backend
  policyTypes: ["Egress"]
  egress:
    - to:
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: {{ .Values.db.service.name | default "postgresql" | quote }}
      ports:
        - protocol: TCP
          port: {{ .Values.db.service.port | default 5432 }}

---
# DB <- BE ingress on 5432
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: db-ingress-from-be
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.db.service.name | default "postgresql" | quote }}
  policyTypes: ["Ingress"]
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app.kubernetes.io/component: backend
      ports:
        - protocol: TCP
          port: {{ .Values.db.service.port | default 5432 }}
{{- end }}

{{- if and $beeg.enabled }}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: be-egress-web
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/component: backend
  policyTypes: ["Egress"]
  egress:
    - to:
        - ipBlock:
            cidr: 0.0.0.0/0
            {{- if $beeg.exceptCidrs }}
            except:
            {{- range $cidr := $beeg.exceptCidrs }}
              - {{ $cidr | quote }}
            {{- end }}
            {{- end }}
      ports:
      {{- range $p := ($beeg.ports | default (list 80 443)) }}
        - protocol: TCP
          port: {{ $p }}
      {{- end }}
{{- end }}

---
# Allow ACME solver pods to be reached by ingress-nginx for HTTP01
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-acme-http01
spec:
  podSelector:
    matchLabels:
      acme.cert-manager.io/http01-solver: "true"
  policyTypes: ["Ingress"]
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: ingress-nginx
      ports:
        - protocol: TCP
          port: 8089

{{- end }}
