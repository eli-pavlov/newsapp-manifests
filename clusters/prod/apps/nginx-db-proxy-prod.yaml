apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-pg-proxy-config
  namespace: default
  annotations:
    argocd.argoproj.io/sync-wave: "0"
data:
  # FIX: Corrected Nginx configuration
  nginx.conf: |
    worker_processes  1;
    error_log  /var/log/nginx/error.log warn;
    pid        /var/run/nginx.pid;

    events {
      worker_connections  1024;
    }

    stream {
      # This resolver enables Nginx to re-resolve the proxy_pass hostname at runtime.
      resolver kube-dns.kube-system.svc.cluster.local valid=10s;

      server {
        listen 5433 ssl;
        ssl_certificate /etc/nginx/tls/dbprod/tls.crt;
        ssl_certificate_key /etc/nginx/tls/dbprod/tls.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        # FIX: Removed the 'set' directive and placed the hostname here directly.
        proxy_pass postgresql-prod.default.svc.cluster.local:5432;
        proxy_timeout 5m;
        proxy_connect_timeout 30s;
      }
    }
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  # FIX: Target the 'default' (production) namespace
  name: nginx-pg-proxy
  namespace: default
  labels:
    app: nginx-pg-proxy
    purpose: pg-proxy
spec:
  selector:
    matchLabels:
      app: nginx-pg-proxy
      purpose: pg-proxy
  template:
    metadata:
      labels:
        app: nginx-pg-proxy
        purpose: pg-proxy
    spec:
      nodeSelector:
        role: database
      tolerations:
        - operator: Exists
      containers:
        - name: nginx
          image: nginx:1.25-alpine
          args: ["nginx", "-g", "daemon off;", "-c", "/etc/nginx/nginx.conf"]
          ports:
            # FIX: Expose the correct SSL port (5433)
            - containerPort: 5433
              hostPort: 5433
              protocol: TCP
          volumeMounts:
            - name: config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
            # FIX: Mount path should match the ssl_certificate path
            - name: tls-dbprod
              mountPath: /etc/nginx/tls/dbprod
              readOnly: true
          securityContext:
            runAsUser: 0
      volumes:
        - name: config
          configMap:
            name: nginx-pg-proxy-config
            items:
              - key: nginx.conf
                path: nginx.conf
        # FIX: Use the correct production TLS secret
        - name: tls-dbprod
          secret:
            secretName: newsapp-db-prod-tls
  updateStrategy:
    type: RollingUpdate