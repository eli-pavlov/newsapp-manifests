# --- replace the ConfigMap + DaemonSet in clusters/dev/apps/nginx-db-proxy-dev.yaml ---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-pg-proxy-config
  namespace: development
data:
  nginx.conf.tpl: |
    worker_processes  1;
    error_log  /var/log/nginx/error.log warn;
    pid /var/run/nginx.pid;

    events { worker_connections 1024; }

    stream {
      resolver {{RESOLVER}} valid=30s;

      server {
        listen 5433 ssl;
        ssl_certificate /etc/nginx/tls/dbdev/tls.crt;
        ssl_certificate_key /etc/nginx/tls/dbdev/tls.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        set $pg_backend "postgresql-dev.development.svc.cluster.local:5432";
        proxy_pass $pg_backend;
        proxy_timeout 5m;
        proxy_connect_timeout 30s;
      }
    }
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: nginx-pg-proxy
  namespace: development
spec:
  selector:
    matchLabels:
      app: nginx-pg-proxy
      purpose: pg-proxy
  template:
    metadata:
      labels:
        app: nginx-pg-proxy
        purpose: pg-proxy
    spec:
      nodeSelector:
        role: database
      tolerations:
        - operator: Exists
      containers:
        - name: nginx
          image: nginx:1.25-alpine
          command:
            - /bin/sh
            - -c
            - |
              set -e
              NS=$(awk '/^nameserver/ {print $2; exit}' /etc/resolv.conf || true)
              if [ -z "$NS" ]; then
                echo "No nameserver found" >&2
                exit 1
              fi
              sed "s#{{RESOLVER}}#${NS}#g" /etc/nginx/nginx.conf.tpl > /etc/nginx/nginx.conf
              echo "Rendered nginx.conf with resolver ${NS}"
              exec nginx -g 'daemon off;'
          ports:
            - containerPort: 5433
              hostPort: 5433
              protocol: TCP
          volumeMounts:
            - name: config
              mountPath: /etc/nginx/nginx.conf.tpl
              subPath: nginx.conf.tpl
            - name: tls-dbdev
              mountPath: /etc/nginx/tls/dbdev
              readOnly: true
          securityContext:
            runAsUser: 0
      volumes:
        - name: config
          configMap:
            name: nginx-pg-proxy-config
            items:
              - key: nginx.conf.tpl
                path: nginx.conf.tpl
        - name: tls-dbdev
          secret:
            secretName: newsapp-db-dev-tls
